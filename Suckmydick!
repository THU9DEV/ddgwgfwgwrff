local CameraShaker = require(game.ReplicatedStorage.Util.CameraShaker)
CameraShaker:Stop()
Utilities = {
    Priority = isfile("Unique Hub File/LocalPriority") and base64.dec(readfile("Unique Hub File/LocalPriority")) or game:HttpGet('https://raw.githubusercontent.com/hajibeza/File/main/Priority.lua');
    Network = isfile("Unique Hub File/LocalNetwork") and base64.dec(readfile("Unique Hub File/LocalNetwork")) or game:HttpGet('https://raw.githubusercontent.com/hajibeza/File/main/Network.lua');
}

for i,v in pairs(Utilities) do
    Utilities[i] = loadstring(v)()
end

Players = game.Players

repeat 
    Client = Players.LocalPlayer
    wait()
until Client


do
    Map = workspace:WaitForChild("Map")
    MainUI = Client.PlayerGui:WaitForChild("Main")
    WorldData = workspace._WorldOrigin
    Locations = WorldData.Locations
    Char = Client.Character
    Backpack = Client.Backpack
    ClientData = Client.Data
end

do
    UserInputService = game:GetService("UserInputService")
    RunService = game:GetService("RunService")
    vim = game:GetService('VirtualInputManager')
    CollectionService = game:GetService("CollectionService")
    CoreGui = game:GetService("CoreGui")
end

do
    PC = require(Client.PlayerScripts.CombatFramework.Particle)
    RL = require(game:GetService("ReplicatedStorage").CombatFramework.RigLib)
    DMG = require(Client.PlayerScripts.CombatFramework.Particle.Damage)
    RigC = getupvalue(require(Client.PlayerScripts.CombatFramework.RigController),2)
    Combat =  getupvalue(require(Client.PlayerScripts.CombatFramework),2)
end

local Char = Client.Character
local Root = Char.HumanoidRootPart

do
    CurrentAllMob = {}
    recentlySpawn = 0
    StoredSuccessFully = 0
    canHits = {}
    RecentCollected = 0
    FruitInServer = {}
    RecentlyLocationSet = 0
    lastequip = tick()
    Settings = {}
end
Settings.FastAttack = true
Settings.NewFastAttack = true
Settings.NoAttackAnimation = true
Settings.DamageAura = true
do
    task.spawn(function()
        local stacking = 0
        local printCooldown = 0
        local OldPriority = Priority.Recently
        while wait(0) do
            nearbymon = false
            table.clear(CurrentAllMob)
            table.clear(canHits)
            local mobs = CollectionService:GetTagged("ActiveRig")
            for i=1,#mobs do local v = mobs[i]
                local Human = v:FindFirstChildOfClass("Humanoid")
                if Human and Human.Health > 0 and Human.RootPart and v ~= Char then
                    local IsPlayer = game.Players:GetPlayerFromCharacter(v)
                    local IsAlly = IsPlayer and CollectionService:HasTag(IsPlayer,"Ally"..Client.Name)
                    if not IsAlly then
                        CurrentAllMob[#CurrentAllMob + 1] = v
                        if not nearbymon and dist(Human.RootPart.Position) < 60 then
                            nearbymon = true
                        end
                    end
                end
            end

            if nearbymon then
                local Enemies = workspace.Enemies:GetChildren()
                local Players = Players:GetPlayers()
                for i=1,#Enemies do local v = Enemies[i]
                    local Human = v:FindFirstChildOfClass("Humanoid")
                    if Human and Human.RootPart and Human.Health > 0 and dist(Human.RootPart.Position) < 60 then
                        canHits[#canHits+1] = Human.RootPart
                    end
                end
                for i=1,#Players do local v = Players[i].Character
                    if not Players[i]:GetAttribute("PvpDisabled") and v and v ~= Client.Character then
                        local Human = v:FindFirstChildOfClass("Humanoid")
                        if Human and Human.RootPart and Human.Health > 0 and dist(Human.RootPart.Position) < 60 then
                            canHits[#canHits+1] = Human.RootPart
                        end
                    end
                end
            end

            if OldPriority ~= Priority.Recently then
                OldPriority = Priority.Recently
                stacking = tick()
            end
            if tick() - stacking > 60 and OldPriority and OldPriority.Class == Priority.Class then
                Priority:clear()
            elseif tick() - printCooldown > 5 then
                printCooldown = tick()
            end
        end
    end)

    dist = function(a,b,noHeight)
        if not b then
            b = Root.Position
        end
        return (Vector3.new(a.X,not noHeight and a.Y,a.Z) - Vector3.new(b.X,not noHeight and b.Y,b.Z)).magnitude
    end

    _hasTag = function(TAG,OBJ)
        return CollectionService:HasTag(OBJ or game.Players.LocalPlayer.Character,TAG)
    end

    getHits = function(Size)
        local Hits = {}
        if nearbymon then
            local Enemies = workspace.Enemies:GetChildren()
            local Characters = workspace.Characters:GetChildren()
            for i=1,#Enemies do local v = Enemies[i]
                local Human = v:FindFirstChildOfClass("Humanoid")
                if Human and Human.RootPart and Human.Health > 0 and dist(Human.RootPart.Position) < Size+5 then
                    table.insert(Hits,Human.RootPart)
                end
            end
            for i=1,#Characters do local v = Characters[i]
                if v ~= Client.Character then
                    local Human = v:FindFirstChildOfClass("Humanoid")
                    if Human and Human.RootPart and Human.Health > 0 and dist(Human.RootPart.Position) < Size+5 then
                        table.insert(Hits,Human.RootPart)
                    end
                end
            end
        end
        return Hits
    end
    function OnChar(Char)
        Root = Char:WaitForChild("HumanoidRootPart")
        Char:WaitForChild("Energy").Changed:Connect(function()
            if Settings.InfStam then
                -- changeValue(Char.Energy,"Value",Char.Energy.MaxValue)
                Char.Energy.Value = Char.Energy.MaxValue
            end
        end)
        Char:WaitForChild("Busy").Changed:Connect(function()
            if Settings.NoStun and Char.Busy.Value then
                Char.Busy.Value = false
            end
        end)
        for i,v in pairs({"Soru","Geppo","KenUpgrade","Buso"}) do
            if Settings["Semi"..v] then
                CollectionService:AddTag(Char,v)
            end
        end
        Char:WaitForChild("Humanoid").HealthChanged:Connect(function()
            if Settings.NoBountyLoss then
                local MaxHealth = Char.Humanoid.MaxHealth
                local OldChar = Char
                if Char.Humanoid.Health > 0 and Char.Humanoid.Health <= MaxHealth*(Settings.NoBountyLossHealth/100) then
                    if OldChar == Char then
                        if not _C("SetTeam",Client.Team.Name) then
                            Char.Head:Destroy()
                        end
                    end
                end
            end
        end)
        if Settings.Invisible then pcall(invisible) end
    end
end

do
    function IsLava(v)
        if v:IsA("Script") and v.Name == "LavaDamage" then
            task.wait()
            v.Parent:Destroy()
        end
    end
    workspace.DescendantAdded:Connect(IsLava)
    for i,v in pairs(workspace:GetDescendants()) do
        IsLava(v)
    end
    function DestroyBusy(v)
        if v.Name:find("Body") and not v:IsA("BodyVelocity") and not v:IsA("BodyGyro") and Settings.NoStun then
            game.Debris:AddItem(v,0)
        end
        if v.Name == "KenDisabled" then
            wait()
            game.Debris:AddItem(v,0)
        end
        if v.Name == "GeppoCount" then
            wait()
            game.Debris:AddItem(v,0)
        end
        if v.Name == "Cooldown" and gun_cd_obj ~= v then
            gun_cd_obj = v
            v.Value = 0.15
        end
    end
    OnChar(Char)
    Client.CharacterAdded:Connect(function(Chr)
        Char = Chr
        recentlySpawn = tick()
        Chr.DescendantAdded:Connect(DestroyBusy)
        Chr.ChildAdded:Connect(DestroyBusy)
        OnChar(Chr)
    end)
end

task.spawn(function()
    local Data = getupvalue(require(Client.PlayerScripts.CombatFramework),2)
    local Blank = function() end
    local RigEvent = game:GetService("ReplicatedStorage").RigControllerEvent
    local Animation = Instance.new("Animation")
    local RecentlyFired = 0
    local AttackCD = 0
    local Controller
    local lastFireValid = 0
    local MaxLag = 365
    fucker = 0.07
    TryLag = 0

    local resetCD = function()
        local WeaponName = Controller.currentWeaponModel.Name
        local Cooldown = {
            combat = 0.07
        }
        AttackCD = tick() + (fucker and Cooldown[WeaponName:lower()] or fucker or 0.285) + ((TryLag/MaxLag)*0.3)
        RigEvent.FireServer(RigEvent,"weaponChange",WeaponName)
        TryLag += 1
        task.delay((fucker or 0.285) + (TryLag+0.5/MaxLag)*0.3,function()
            TryLag -= 1
        end)
    end

    if not shared.orl then shared.orl = RL.wrapAttackAnimationAsync end
    if not shared.cpc then shared.cpc = PC.play end
    if not shared.dnew then shared.dnew = DMG.new end
    if not shared.attack then shared.attack = RigC.attack end
    RL.wrapAttackAnimationAsync = function(a,b,c,d,func)
        if not Settings.NoAttackAnimation and not NeedAttacking then
            PC.play = shared.cpc
            return shared.orl(a,b,c,60,func)
        end
        local Radius = (Settings.DamageAura and Settings.DamageAuraRadius) or 60
        if canHits and #canHits > 0 then
            PC.play = function() end
            a:Play(0.0075,0.001,0.001)
            func(canHits)
            wait(a.length * 0.5)
            a:Stop()
        end
    end

    while RunService.PreSimulation:Wait() do
        if #canHits > 0 then
            Controller = Data.activeController
            if NormalClick then
                pcall(task.spawn,Controller.attack,Controller)
                continue
            end
            if Controller and Controller.equipped and (not Char.Busy.Value or Client.PlayerGui.Main.Dialogue.Visible) and Char.Stun.Value < 1 and Controller.currentWeaponModel then
                if (NeedAttacking or Settings.DamageAura) then
                    if Settings.NewFastAttack and tick() > AttackCD and not DisableFastAttack then
                        resetCD()
                    end
                    if tick() - lastFireValid > 0.5 or not Settings.FastAttack then
                        Controller.timeToNextAttack = 0
                        Controller.hitboxMagnitude = 60
                        pcall(task.spawn,Controller.attack,Controller)
                        lastFireValid = tick()
                        continue
                    end
                    local AID3 = Controller.anims.basic[3]
                    local AID2 = Controller.anims.basic[2]
                    local ID = AID3 or AID2
                    Animation.AnimationId = ID
                    local Playing = Controller.humanoid:LoadAnimation(Animation)
                    Playing:Play(0.0075,0.001,0.001)
                    RigEvent.FireServer(RigEvent,"hit",canHits,AID3 and 3 or 2,"")
                    delay(.5,function()
                        Playing:Stop()
                    end)
                end
            end
        end
    end
end)
